#!/bin/bash
source $TOP_DIR/.config
source $TOP_DIR/scripts/log.sh

CUR_DIR=$(cd $(dirname $0); pwd)
CMD=$1
VERSION=$CONFIG_LIBUSB_VERSION

libusb_check_version()
{
	if [ -d $CUR_DIR/$VERSION ]; then
		return 0
	else
		ERR "$VERSION is not exist!"
		exit 1 # Failure
	fi
}

libusb_check_aclocal()
{
	local version=`aclocal --version | sed -n '1p' | awk '{print $NF}'`
	local major=`echo "${version}" | awk -F. '{print $1}'`
	local minor=`echo "${version}" | awk -F. '{print $2}'`
	local patch=`echo "${version}" | awk -F. '{print $3}'`
	local missing=false

	if [ $major -lt 1 ]; then
		missing=true
	elif [ $major -eq 1 ] && [ $minor -lt 16 ]; then
		missing=true
	fi

	if [ "$missing" = "true" ]; then
		NOTICE "aclocal $version missmatch, try to fix it..."
		autoscan; aclocal; autoconf; automake --add-missing
	fi
}

libusb_build()
{
	pushd $CUR_DIR/$VERSION
		libusb_check_aclocal

		if [ ! -f configure ]; then
			autoscan; aclocal; autoconf; automake --add-missing
		fi
		./configure --host=${CONFIG_HOST_CPU}-${CONFIG_HOST_VENDOR}-${CONFIG_HOST_OS} --prefix=${CUR_DIR} CC=${CONFIG_CROSS_COMPILE}gcc CXX=${CONFIG_CROSS_COMPILE}g++ --disable-udev
		make; make install
	popd
}

libusb_clean()
{
	pushd $CUR_DIR/$VERSION; make clean; popd
}

libusb_distclean()
{
	pushd $CUR_DIR/$VERSION
		make distclean

		rm -rf autom4te.cache
		if [ "$VERSION" = "libusb-1.0.24" ]; then
			rm -f configure configure.scan
			rm -f Makefile.in aclocal.m4
			rm -f autoscan.log config.log
			rm -f examples/Makefile.in libusb/Makefile.in \
				tests/Makefile.in
		fi
	popd

	rm -rf $CUR_DIR/include
	rm -rf $CUR_DIR/lib
}

libusb_check_version

if [ "$CMD" = "build" ]; then
	libusb_build
elif [ "$CMD" = "clean" ]; then
	libusb_clean
elif [ "$CMD" = "distclean" ]; then
	libusb_distclean
fi
